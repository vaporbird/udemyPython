#My worst code so far. Someday I should refactor this abomination
import random
letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

print("Welcome to the PyPassword Generator!")
nr_letters = int(input("How many letters would you like in your password?\n").strip())
nr_symbols = int(input(f"How many symbols would you like?\n").strip())
nr_numbers = int(input(f"How many numbers would you like?\n").strip())

rem_letters = nr_letters
rem_symbols = nr_symbols
rem_numbers = nr_numbers

newPassword = ""
for i in range (1, nr_letters):
		
	choice = random.randint(0,rem_letters)
	rem_letters -=1
	if choice < rem_symbols:
		rem_symbols += -1
		newPassword += symbols[random.randint(0,len(symbols) - 1)]
		continue
	if choice < rem_numbers + rem_symbols:
		rem_numbers += -1
		newPassword += numbers[random.randint(0,len(numbers) - 1)]
		continue
	newPassword += letters[random.randint(0,len(letters) - 1)]
#last iteration should be outside, because it is always 0, and it will always generate a symbol. This is when I realized this code is terrible
if rem_symbols == 1:
	newPassword += numbers[random.randint(0,len(numbers) - 1)]
elif rem_numbers == 1:
	newPassword += numbers[random.randint(0,len(numbers) - 1)]
else:
	newPassword += letters[random.randint(0,len(letters) - 1)]

print(f"Your new password is : {newPassword}")

passwordList = list(newPassword)
random.shuffle(passwordList)
passwordShuffled = ''.join(passwordList)
print(f"Your password generated by using the shuffle method is : {passwordShuffled}")
